package Lesson_23_01_19;

public class Lesson_23_01_2019 {

}
//Домашка по потокам:
//Лучше использовать wait вместо Sleep из-за разнообразных сетевых проблем;
//Почитать про методы wait и notify для потоков;
//Посмотреть про MyException и сделать свой;

Само занятие
git -какой-то тул. Необходио для работы с ним поставить cygwin(эмулятор консоли линукс) и работать через него, для работы с гитом.
Задача git - это как бы хранилище кода, в который каждый член команды разработки сливает свою часть кода, даже с ошибками и ексепшн еррорами.
Будет ругаться, когда 1 и тот же файл закидывается в гит(Скажет, что файл устаревший, и попросит вносить изменения в обновленный)

Гит имеет несколько команд. cd-changedirectory;	ls- выводит то, что находится в папке; mkdir - создает директорию; Как только сделали гитклон, необходимо зайти внутрь
												Origin (remote)<- Это то, что хранится удаленно на сервере.
												.-----------. (local)
											(git Clone...URL)I
															 I
василий что-то сделал и закинул в общий   					 V
репозиторий	
Команды git:
	git remote -v - увидим, на какой URL ссылаемся мы и откуда вытянули мы через gitClone (С какого места удаленного репозитория мы взяли)
	git status - статус файлов выводит. Те, что изменял я, подчеркнет красным. Эти файлы в моем локальном репозитории булдут отличаться от общего.
	git add -все, что добавивляем в общую папку индексируем по одному;
	git commit -m "message" - под мессаджем понмиается то, что мы я сделал.
	git push origin "master" - закидываем все изменения в бранчу мастер. (В оригине мб несколько веток [подхранилищ])(Самая главная ветка называется мастер - смотри фотку)
	//для домашки мы должны нащывать вещи след образом SStuptchik
	
											
Если с фалйом работает несколько человек, то перед git status нам необходимо написать git pull origin master - это стягивает изменения, которые делал Вася ко мне в локальный репозиторий.
Иногда возникают merge conflict - их нужно фиксить. Потому что файлы не совпадают, которые у тебя и на сервере. Они возникают тогда, когда несколько человек работают в 1 ветке.
//Можно потихоньку изучать cygwin и линуксовые команды.
git chekout -b "название бранчи" - создание бранчи.
git branch
Это все работает по протоколу https или SSH. https будет всегда перед пушем просить логин и пароль. а ssh будет генерить ssh-key в кол-ве 2 штуки(паблик и сикрет);


ДОМАШКА: Завести акк на гитхабе(github - это тул, который помогает работать с гитом. Это как бы вебморда для гита). Виталик создал там ветки. Это в скайпе. (Подсказал, как можно быстрее добавлять файлы. Через звездочку. Проиндексированные файлы должны быть через зелеными.)
			И подраобраться с еррорами и ексепшнами. Почитать про линкусовые команды, про гит, про https, ssh. 
			И НЕОБХОДИМО НАЧАТЬ ЧИТАТЬ XML.